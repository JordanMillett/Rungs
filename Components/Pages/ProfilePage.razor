@page "/profile"
@inject ProfileService ProfileService
@inject FileService FileService

<PageTitle>Profile</PageTitle>

<p>Enter Name Here:</p>
<input type="text" value="@ProfileService.ProfileName" @oninput="ProfileNameChanged"/>

<p>Term to add:</p>
<input type="text" @bind="TermToAdd"/>
<button @onclick="() => ProfileService.AddTerm(TermToAdd)">Add</button>

<p>Term to remove:</p>
<input type="text" @bind="TermToRemove"/>
<button @onclick="() => ProfileService.RemoveTerm(TermToRemove)">Remove</button>

<p>Clear Profile</p>
<button @onclick="() => ProfileService.ClearProfile()">Clear</button>
@{
    foreach (string T in ProfileService.Terms)
    {
        if(FileService.AllTerms.ContainsKey(T))
        {
            <p>@T ------------- @FileService.AllTerms[T].EN</p>
        }else
        {
            <p>@T</p>
        }
    }
    
    /*
    foreach (KeyValuePair<string, Term> T in ProfileService.Terms)
    {
        <p>@T.Value.RU - @T.Value.EN</p>
    } */       
}


@code
{
    string TermToAdd = "";
    string TermToRemove = "";

    async Task ProfileNameChanged(ChangeEventArgs e)
    {
        ProfileService.ProfileName = string.Format("{0}", e.Value);
        await ProfileService.SaveProfile();
    }
}